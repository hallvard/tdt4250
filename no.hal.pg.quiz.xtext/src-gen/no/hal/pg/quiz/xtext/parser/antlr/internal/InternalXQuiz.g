/*
 * generated by Xtext
 */
grammar InternalXQuiz;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package no.hal.pg.quiz.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package no.hal.pg.quiz.xtext.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import no.hal.pg.quiz.xtext.services.XQuizGrammarAccess;

}

@parser::members {

 	private XQuizGrammarAccess grammarAccess;
 	
    public InternalXQuizParser(TokenStream input, XQuizGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Quiz";	
   	}
   	
   	@Override
   	protected XQuizGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleQuiz
entryRuleQuiz returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQuizRule()); }
	 iv_ruleQuiz=ruleQuiz 
	 { $current=$iv_ruleQuiz.current; } 
	 EOF 
;

// Rule Quiz
ruleQuiz returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getQuizAccess().getQuizAction_0(),
            $current);
    }
)	otherlv_1='quiz' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getQuizAccess().getQuizKeyword_1());
    }
(((
(
		{ 
	        newCompositeNode(grammarAccess.getQuizAccess().getNameQNameParserRuleCall_2_0_0_0()); 
	    }
		lv_name_2_0=ruleQName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQuizRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"QName");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_title_3_0=RULE_STRING
		{
			newLeafNode(lv_title_3_0, grammarAccess.getQuizAccess().getTitleSTRINGTerminalRuleCall_2_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getQuizRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"title",
        		lv_title_3_0, 
        		"STRING");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getQuizAccess().getPartsAbstractQuizPartParserRuleCall_2_0_2_0()); 
	    }
		lv_parts_4_0=ruleAbstractQuizPart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQuizRule());
	        }
       		add(
       			$current, 
       			"parts",
        		lv_parts_4_0, 
        		"AbstractQuizPart");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getQuizAccess().getPartsAnonymousQuizPartParserRuleCall_2_1_0()); 
	    }
		lv_parts_5_0=ruleAnonymousQuizPart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQuizRule());
	        }
       		add(
       			$current, 
       			"parts",
        		lv_parts_5_0, 
        		"AnonymousQuizPart");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleQName
entryRuleQName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQNameRule()); } 
	 iv_ruleQName=ruleQName 
	 { $current=$iv_ruleQName.current.getText(); }  
	 EOF 
;

// Rule QName
ruleQName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQNameAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQNameAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQNameAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Entry rule entryRuleAbstractQuizPart
entryRuleAbstractQuizPart returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAbstractQuizPartRule()); }
	 iv_ruleAbstractQuizPart=ruleAbstractQuizPart 
	 { $current=$iv_ruleAbstractQuizPart.current; } 
	 EOF 
;

// Rule AbstractQuizPart
ruleAbstractQuizPart returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAbstractQuizPartAccess().getQuizPartParserRuleCall_0()); 
    }
    this_QuizPart_0=ruleQuizPart
    { 
        $current = $this_QuizPart_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractQuizPartAccess().getQuizPartRefParserRuleCall_1()); 
    }
    this_QuizPartRef_1=ruleQuizPartRef
    { 
        $current = $this_QuizPartRef_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleQuizPart
entryRuleQuizPart returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQuizPartRule()); }
	 iv_ruleQuizPart=ruleQuizPart 
	 { $current=$iv_ruleQuizPart.current; } 
	 EOF 
;

// Rule QuizPart
ruleQuizPart returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='part' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getQuizPartAccess().getPartKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getQuizPartAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getQuizPartRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		lv_title_2_0=RULE_STRING
		{
			newLeafNode(lv_title_2_0, grammarAccess.getQuizPartAccess().getTitleSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getQuizPartRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"title",
        		lv_title_2_0, 
        		"STRING");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getQuizPartAccess().getQuestionsAbstractQAParserRuleCall_3_0()); 
	    }
		lv_questions_3_0=ruleAbstractQA		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQuizPartRule());
	        }
       		add(
       			$current, 
       			"questions",
        		lv_questions_3_0, 
        		"AbstractQA");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleQuizPartRef
entryRuleQuizPartRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQuizPartRefRule()); }
	 iv_ruleQuizPartRef=ruleQuizPartRef 
	 { $current=$iv_ruleQuizPartRef.current; } 
	 EOF 
;

// Rule QuizPartRef
ruleQuizPartRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='part' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getQuizPartRefAccess().getPartKeyword_0());
    }
	otherlv_1='ref' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getQuizPartRefAccess().getRefKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getQuizPartRefRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getQuizPartRefAccess().getPartRefQuizPartCrossReference_2_0()); 
	    }
		ruleQName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAnonymousQuizPart
entryRuleAnonymousQuizPart returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnonymousQuizPartRule()); }
	 iv_ruleAnonymousQuizPart=ruleAnonymousQuizPart 
	 { $current=$iv_ruleAnonymousQuizPart.current; } 
	 EOF 
;

// Rule AnonymousQuizPart
ruleAnonymousQuizPart returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAnonymousQuizPartAccess().getQuizPartAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAnonymousQuizPartAccess().getQuestionsAbstractQAParserRuleCall_1_0()); 
	    }
		lv_questions_1_0=ruleAbstractQA		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnonymousQuizPartRule());
	        }
       		add(
       			$current, 
       			"questions",
        		lv_questions_1_0, 
        		"AbstractQA");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleAbstractQA
entryRuleAbstractQA returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAbstractQARule()); }
	 iv_ruleAbstractQA=ruleAbstractQA 
	 { $current=$iv_ruleAbstractQA.current; } 
	 EOF 
;

// Rule AbstractQA
ruleAbstractQA returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAbstractQAAccess().getQAParserRuleCall_0()); 
    }
    this_QA_0=ruleQA
    { 
        $current = $this_QA_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractQAAccess().getQARefParserRuleCall_1()); 
    }
    this_QARef_1=ruleQARef
    { 
        $current = $this_QARef_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleQARef
entryRuleQARef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQARefRule()); }
	 iv_ruleQARef=ruleQARef 
	 { $current=$iv_ruleQARef.current; } 
	 EOF 
;

// Rule QARef
ruleQARef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ref' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getQARefAccess().getRefKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getQARefRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getQARefAccess().getQaRefQACrossReference_1_0()); 
	    }
		ruleQName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleQA
entryRuleQA returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQARule()); }
	 iv_ruleQA=ruleQA 
	 { $current=$iv_ruleQA.current; } 
	 EOF 
;

// Rule QA
ruleQA returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getQAAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getQARule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getQAAccess().getQQuestionParserRuleCall_1_0()); 
	    }
		lv_q_1_0=ruleQuestion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQARule());
	        }
       		set(
       			$current, 
       			"q",
        		lv_q_1_0, 
        		"Question");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getQAAccess().getAAnswerParserRuleCall_2_0()); 
	    }
		lv_a_2_0=ruleAnswer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQARule());
	        }
       		set(
       			$current, 
       			"a",
        		lv_a_2_0, 
        		"Answer");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleQuestion
entryRuleQuestion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQuestionRule()); }
	 iv_ruleQuestion=ruleQuestion 
	 { $current=$iv_ruleQuestion.current; } 
	 EOF 
;

// Rule Question
ruleQuestion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getQuestionAccess().getStringQuestionParserRuleCall_0()); 
    }
    this_StringQuestion_0=ruleStringQuestion
    { 
        $current = $this_StringQuestion_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getQuestionAccess().getXmlQuestionParserRuleCall_1()); 
    }
    this_XmlQuestion_1=ruleXmlQuestion
    { 
        $current = $this_XmlQuestion_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleStringQuestion
entryRuleStringQuestion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringQuestionRule()); }
	 iv_ruleStringQuestion=ruleStringQuestion 
	 { $current=$iv_ruleStringQuestion.current; } 
	 EOF 
;

// Rule StringQuestion
ruleStringQuestion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_question_0_0=RULE_STRING
		{
			newLeafNode(lv_question_0_0, grammarAccess.getStringQuestionAccess().getQuestionSTRINGTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStringQuestionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"question",
        		lv_question_0_0, 
        		"STRING");
	    }

)
)
;





// Entry rule entryRuleXmlQuestion
entryRuleXmlQuestion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXmlQuestionRule()); }
	 iv_ruleXmlQuestion=ruleXmlQuestion 
	 { $current=$iv_ruleXmlQuestion.current; } 
	 EOF 
;

// Rule XmlQuestion
ruleXmlQuestion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getXmlQuestionAccess().getXmlXmlParserRuleCall_0()); 
	    }
		lv_xml_0_0=ruleXml		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXmlQuestionRule());
	        }
       		set(
       			$current, 
       			"xml",
        		lv_xml_0_0, 
        		"Xml");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleAnswer
entryRuleAnswer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnswerRule()); }
	 iv_ruleAnswer=ruleAnswer 
	 { $current=$iv_ruleAnswer.current; } 
	 EOF 
;

// Rule Answer
ruleAnswer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAnswerAccess().getOptionAnswerParserRuleCall_0()); 
    }
    this_OptionAnswer_0=ruleOptionAnswer
    { 
        $current = $this_OptionAnswer_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAnswerAccess().getOptionsAnswerParserRuleCall_1()); 
    }
    this_OptionsAnswer_1=ruleOptionsAnswer
    { 
        $current = $this_OptionsAnswer_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleOptionAnswer
entryRuleOptionAnswer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOptionAnswerRule()); }
	 iv_ruleOptionAnswer=ruleOptionAnswer 
	 { $current=$iv_ruleOptionAnswer.current; } 
	 EOF 
;

// Rule OptionAnswer
ruleOptionAnswer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getOptionAnswerAccess().getSimpleAnswerParserRuleCall_0()); 
    }
    this_SimpleAnswer_0=ruleSimpleAnswer
    { 
        $current = $this_SimpleAnswer_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOptionAnswerAccess().getXmlAnswerParserRuleCall_1()); 
    }
    this_XmlAnswer_1=ruleXmlAnswer
    { 
        $current = $this_XmlAnswer_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSimpleAnswer
entryRuleSimpleAnswer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSimpleAnswerRule()); }
	 iv_ruleSimpleAnswer=ruleSimpleAnswer 
	 { $current=$iv_ruleSimpleAnswer.current; } 
	 EOF 
;

// Rule SimpleAnswer
ruleSimpleAnswer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSimpleAnswerAccess().getStringAnswerParserRuleCall_0()); 
    }
    this_StringAnswer_0=ruleStringAnswer
    { 
        $current = $this_StringAnswer_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSimpleAnswerAccess().getRegexAnswerParserRuleCall_1()); 
    }
    this_RegexAnswer_1=ruleRegexAnswer
    { 
        $current = $this_RegexAnswer_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSimpleAnswerAccess().getNumberAnswerParserRuleCall_2()); 
    }
    this_NumberAnswer_2=ruleNumberAnswer
    { 
        $current = $this_NumberAnswer_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSimpleAnswerAccess().getBooleanAnswerParserRuleCall_3()); 
    }
    this_BooleanAnswer_3=ruleBooleanAnswer
    { 
        $current = $this_BooleanAnswer_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleStringAnswer
entryRuleStringAnswer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringAnswerRule()); }
	 iv_ruleStringAnswer=ruleStringAnswer 
	 { $current=$iv_ruleStringAnswer.current; } 
	 EOF 
;

// Rule StringAnswer
ruleStringAnswer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_value_0_0=RULE_STRING
		{
			newLeafNode(lv_value_0_0, grammarAccess.getStringAnswerAccess().getValueSTRINGTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStringAnswerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"STRING");
	    }

)
)(
(
		lv_ignoreCase_1_0=	'~' 
    {
        newLeafNode(lv_ignoreCase_1_0, grammarAccess.getStringAnswerAccess().getIgnoreCaseTildeKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStringAnswerRule());
	        }
       		setWithLastConsumed($current, "ignoreCase", true, "~");
	    }

)
)?)
;





// Entry rule entryRuleRegexAnswer
entryRuleRegexAnswer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRegexAnswerRule()); }
	 iv_ruleRegexAnswer=ruleRegexAnswer 
	 { $current=$iv_ruleRegexAnswer.current; } 
	 EOF 
;

// Rule RegexAnswer
ruleRegexAnswer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_regexp_0_0=	'/' 
    {
        newLeafNode(lv_regexp_0_0, grammarAccess.getRegexAnswerAccess().getRegexpSolidusKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRegexAnswerRule());
	        }
       		setWithLastConsumed($current, "regexp", true, "/");
	    }

)
)(
(
		lv_value_1_0=RULE_STRING
		{
			newLeafNode(lv_value_1_0, grammarAccess.getRegexAnswerAccess().getValueSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRegexAnswerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"STRING");
	    }

)
)	otherlv_2='/' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRegexAnswerAccess().getSolidusKeyword_2());
    }
(
(
		lv_ignoreCase_3_0=	'~' 
    {
        newLeafNode(lv_ignoreCase_3_0, grammarAccess.getRegexAnswerAccess().getIgnoreCaseTildeKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRegexAnswerRule());
	        }
       		setWithLastConsumed($current, "ignoreCase", true, "~");
	    }

)
)?)
;





// Entry rule entryRuleNumberAnswer
entryRuleNumberAnswer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumberAnswerRule()); }
	 iv_ruleNumberAnswer=ruleNumberAnswer 
	 { $current=$iv_ruleNumberAnswer.current; } 
	 EOF 
;

// Rule NumberAnswer
ruleNumberAnswer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getNumberAnswerAccess().getValueEDoubleObjectParserRuleCall_0()); 
	    }
		lv_value_0_0=ruleEDoubleObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumberAnswerRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"EDoubleObject");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleEDoubleObject
entryRuleEDoubleObject returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEDoubleObjectRule()); } 
	 iv_ruleEDoubleObject=ruleEDoubleObject 
	 { $current=$iv_ruleEDoubleObject.current.getText(); }  
	 EOF 
;

// Rule EDoubleObject
ruleEDoubleObject returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_INT_0=RULE_INT    {
		$current.merge(this_INT_0);
    }

    { 
    newLeafNode(this_INT_0, grammarAccess.getEDoubleObjectAccess().getINTTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEDoubleObjectAccess().getFullStopKeyword_1_0()); 
    }
    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getEDoubleObjectAccess().getINTTerminalRuleCall_1_1()); 
    }
)?)
    ;





// Entry rule entryRuleBooleanAnswer
entryRuleBooleanAnswer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBooleanAnswerRule()); }
	 iv_ruleBooleanAnswer=ruleBooleanAnswer 
	 { $current=$iv_ruleBooleanAnswer.current; } 
	 EOF 
;

// Rule BooleanAnswer
ruleBooleanAnswer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBooleanAnswerAccess().getBooleanAnswerAction_0(),
            $current);
    }
)((
(
(
		lv_value_1_1=	'yes' 
    {
        newLeafNode(lv_value_1_1, grammarAccess.getBooleanAnswerAccess().getValueYesKeyword_1_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBooleanAnswerRule());
	        }
       		setWithLastConsumed($current, "value", true, null);
	    }

    |		lv_value_1_2=	'true' 
    {
        newLeafNode(lv_value_1_2, grammarAccess.getBooleanAnswerAccess().getValueTrueKeyword_1_0_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBooleanAnswerRule());
	        }
       		setWithLastConsumed($current, "value", true, null);
	    }

)

)
)
    |(	otherlv_2='no' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBooleanAnswerAccess().getNoKeyword_1_1_0());
    }

    |	otherlv_3='false' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBooleanAnswerAccess().getFalseKeyword_1_1_1());
    }
)))
;





// Entry rule entryRuleXmlAnswer
entryRuleXmlAnswer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXmlAnswerRule()); }
	 iv_ruleXmlAnswer=ruleXmlAnswer 
	 { $current=$iv_ruleXmlAnswer.current; } 
	 EOF 
;

// Rule XmlAnswer
ruleXmlAnswer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getXmlAnswerAccess().getXmlXmlParserRuleCall_0()); 
	    }
		lv_xml_0_0=ruleXml		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXmlAnswerRule());
	        }
       		set(
       			$current, 
       			"xml",
        		lv_xml_0_0, 
        		"Xml");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleOptionsAnswer
entryRuleOptionsAnswer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOptionsAnswerRule()); }
	 iv_ruleOptionsAnswer=ruleOptionsAnswer 
	 { $current=$iv_ruleOptionsAnswer.current; } 
	 EOF 
;

// Rule OptionsAnswer
ruleOptionsAnswer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getOptionsAnswerAccess().getSingleOptionsAnswerParserRuleCall_0()); 
    }
    this_SingleOptionsAnswer_0=ruleSingleOptionsAnswer
    { 
        $current = $this_SingleOptionsAnswer_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOptionsAnswerAccess().getManyOptionsAnswerParserRuleCall_1()); 
    }
    this_ManyOptionsAnswer_1=ruleManyOptionsAnswer
    { 
        $current = $this_ManyOptionsAnswer_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSingleOptionsAnswer
entryRuleSingleOptionsAnswer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSingleOptionsAnswerRule()); }
	 iv_ruleSingleOptionsAnswer=ruleSingleOptionsAnswer 
	 { $current=$iv_ruleSingleOptionsAnswer.current; } 
	 EOF 
;

// Rule SingleOptionsAnswer
ruleSingleOptionsAnswer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSingleOptionsAnswerAccess().getSingleBoxOptionsAnswerParserRuleCall_0()); 
    }
    this_SingleBoxOptionsAnswer_0=ruleSingleBoxOptionsAnswer
    { 
        $current = $this_SingleBoxOptionsAnswer_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSingleOptionsAnswerAccess().getSingleListOptionsAnswerParserRuleCall_1()); 
    }
    this_SingleListOptionsAnswer_1=ruleSingleListOptionsAnswer
    { 
        $current = $this_SingleListOptionsAnswer_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSingleBoxOptionsAnswer
entryRuleSingleBoxOptionsAnswer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSingleBoxOptionsAnswerRule()); }
	 iv_ruleSingleBoxOptionsAnswer=ruleSingleBoxOptionsAnswer 
	 { $current=$iv_ruleSingleBoxOptionsAnswer.current; } 
	 EOF 
;

// Rule SingleBoxOptionsAnswer
ruleSingleBoxOptionsAnswer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getSingleBoxOptionsAnswerAccess().getOptionsSingleBoxOptionParserRuleCall_0()); 
	    }
		lv_options_0_0=ruleSingleBoxOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSingleBoxOptionsAnswerRule());
	        }
       		add(
       			$current, 
       			"options",
        		lv_options_0_0, 
        		"SingleBoxOption");
	        afterParserOrEnumRuleCall();
	    }

)
)+
;





// Entry rule entryRuleSingleBoxOption
entryRuleSingleBoxOption returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSingleBoxOptionRule()); }
	 iv_ruleSingleBoxOption=ruleSingleBoxOption 
	 { $current=$iv_ruleSingleBoxOption.current; } 
	 EOF 
;

// Rule SingleBoxOption
ruleSingleBoxOption returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSingleBoxOptionAccess().getLeftParenthesisKeyword_0());
    }
(
(
		lv_correct_1_0=	'x' 
    {
        newLeafNode(lv_correct_1_0, grammarAccess.getSingleBoxOptionAccess().getCorrectXKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSingleBoxOptionRule());
	        }
       		setWithLastConsumed($current, "correct", true, "x");
	    }

)
)?	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSingleBoxOptionAccess().getRightParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSingleBoxOptionAccess().getOptionOptionAnswerParserRuleCall_3_0()); 
	    }
		lv_option_3_0=ruleOptionAnswer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSingleBoxOptionRule());
	        }
       		set(
       			$current, 
       			"option",
        		lv_option_3_0, 
        		"OptionAnswer");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSingleListOptionsAnswer
entryRuleSingleListOptionsAnswer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSingleListOptionsAnswerRule()); }
	 iv_ruleSingleListOptionsAnswer=ruleSingleListOptionsAnswer 
	 { $current=$iv_ruleSingleListOptionsAnswer.current; } 
	 EOF 
;

// Rule SingleListOptionsAnswer
ruleSingleListOptionsAnswer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getSingleListOptionsAnswerAccess().getOptionsSingleListOptionParserRuleCall_0()); 
	    }
		lv_options_0_0=ruleSingleListOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSingleListOptionsAnswerRule());
	        }
       		add(
       			$current, 
       			"options",
        		lv_options_0_0, 
        		"SingleListOption");
	        afterParserOrEnumRuleCall();
	    }

)
)+
;





// Entry rule entryRuleSingleListOption
entryRuleSingleListOption returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSingleListOptionRule()); }
	 iv_ruleSingleListOption=ruleSingleListOption 
	 { $current=$iv_ruleSingleListOption.current; } 
	 EOF 
;

// Rule SingleListOption
ruleSingleListOption returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((	otherlv_0='-' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSingleListOptionAccess().getHyphenMinusKeyword_0_0_0());
    }

    |	otherlv_1='x' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSingleListOptionAccess().getXKeyword_0_0_1());
    }
)
    |(
(
		lv_correct_2_0=	'v' 
    {
        newLeafNode(lv_correct_2_0, grammarAccess.getSingleListOptionAccess().getCorrectVKeyword_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSingleListOptionRule());
	        }
       		setWithLastConsumed($current, "correct", true, "v");
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getSingleListOptionAccess().getOptionOptionAnswerParserRuleCall_1_0()); 
	    }
		lv_option_3_0=ruleOptionAnswer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSingleListOptionRule());
	        }
       		set(
       			$current, 
       			"option",
        		lv_option_3_0, 
        		"OptionAnswer");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleManyOptionsAnswer
entryRuleManyOptionsAnswer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getManyOptionsAnswerRule()); }
	 iv_ruleManyOptionsAnswer=ruleManyOptionsAnswer 
	 { $current=$iv_ruleManyOptionsAnswer.current; } 
	 EOF 
;

// Rule ManyOptionsAnswer
ruleManyOptionsAnswer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getManyOptionsAnswerAccess().getOptionsManyOptionParserRuleCall_0()); 
	    }
		lv_options_0_0=ruleManyOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getManyOptionsAnswerRule());
	        }
       		add(
       			$current, 
       			"options",
        		lv_options_0_0, 
        		"ManyOption");
	        afterParserOrEnumRuleCall();
	    }

)
)+
;





// Entry rule entryRuleManyOption
entryRuleManyOption returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getManyOptionRule()); }
	 iv_ruleManyOption=ruleManyOption 
	 { $current=$iv_ruleManyOption.current; } 
	 EOF 
;

// Rule ManyOption
ruleManyOption returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getManyOptionAccess().getLeftSquareBracketKeyword_0());
    }
(
(
		lv_correct_1_0=	'x' 
    {
        newLeafNode(lv_correct_1_0, grammarAccess.getManyOptionAccess().getCorrectXKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getManyOptionRule());
	        }
       		setWithLastConsumed($current, "correct", true, "x");
	    }

)
)?	otherlv_2=']' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getManyOptionAccess().getRightSquareBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getManyOptionAccess().getOptionOptionAnswerParserRuleCall_3_0()); 
	    }
		lv_option_3_0=ruleOptionAnswer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getManyOptionRule());
	        }
       		set(
       			$current, 
       			"option",
        		lv_option_3_0, 
        		"OptionAnswer");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleXml
entryRuleXml returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXmlRule()); }
	 iv_ruleXml=ruleXml 
	 { $current=$iv_ruleXml.current; } 
	 EOF 
;

// Rule Xml
ruleXml returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='<<' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXmlAccess().getLessThanSignLessThanSignKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXmlAccess().getElementXmlElementParserRuleCall_1_0()); 
	    }
		lv_element_1_0=ruleXmlElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXmlRule());
	        }
       		set(
       			$current, 
       			"element",
        		lv_element_1_0, 
        		"XmlElement");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='>>' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXmlAccess().getGreaterThanSignGreaterThanSignKeyword_2());
    }
)
;





// Entry rule entryRuleXmlContents
entryRuleXmlContents returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXmlContentsRule()); }
	 iv_ruleXmlContents=ruleXmlContents 
	 { $current=$iv_ruleXmlContents.current; } 
	 EOF 
;

// Rule XmlContents
ruleXmlContents returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getXmlContentsAccess().getElementXmlElementParserRuleCall_0_0()); 
	    }
		lv_element_0_0=ruleXmlElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXmlContentsRule());
	        }
       		set(
       			$current, 
       			"element",
        		lv_element_0_0, 
        		"XmlElement");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_post_1_0=RULE_XML_TEXT
		{
			newLeafNode(lv_post_1_0, grammarAccess.getXmlContentsAccess().getPostXML_TEXTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXmlContentsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"post",
        		lv_post_1_0, 
        		"XML_TEXT");
	    }

)
))
;





// Entry rule entryRuleXmlElement
entryRuleXmlElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXmlElementRule()); }
	 iv_ruleXmlElement=ruleXmlElement 
	 { $current=$iv_ruleXmlElement.current; } 
	 EOF 
;

// Rule XmlElement
ruleXmlElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getXmlElementAccess().getXmlPIAnswerElementParserRuleCall_0()); 
    }
    this_XmlPIAnswerElement_0=ruleXmlPIAnswerElement
    { 
        $current = $this_XmlPIAnswerElement_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getXmlElementAccess().getXmlTagElementParserRuleCall_1()); 
    }
    this_XmlTagElement_1=ruleXmlTagElement
    { 
        $current = $this_XmlTagElement_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleXmlPIAnswerElement
entryRuleXmlPIAnswerElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXmlPIAnswerElementRule()); }
	 iv_ruleXmlPIAnswerElement=ruleXmlPIAnswerElement 
	 { $current=$iv_ruleXmlPIAnswerElement.current; } 
	 EOF 
;

// Rule XmlPIAnswerElement
ruleXmlPIAnswerElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='?' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getXmlPIAnswerElementAccess().getQuestionMarkKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getXmlPIAnswerElementAccess().getAnswerSimpleAnswerParserRuleCall_1_0()); 
	    }
		lv_answer_1_0=ruleSimpleAnswer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXmlPIAnswerElementRule());
	        }
       		set(
       			$current, 
       			"answer",
        		lv_answer_1_0, 
        		"SimpleAnswer");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='?' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getXmlPIAnswerElementAccess().getQuestionMarkKeyword_2());
    }
)
;





// Entry rule entryRuleXmlTagElement
entryRuleXmlTagElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXmlTagElementRule()); }
	 iv_ruleXmlTagElement=ruleXmlTagElement 
	 { $current=$iv_ruleXmlTagElement.current; } 
	 EOF 
;

// Rule XmlTagElement
ruleXmlTagElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getXmlTagElementAccess().getStartTagXmlTagParserRuleCall_0_0()); 
	    }
		lv_startTag_0_0=ruleXmlTag		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXmlTagElementRule());
	        }
       		set(
       			$current, 
       			"startTag",
        		lv_startTag_0_0, 
        		"XmlTag");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='/' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXmlTagElementAccess().getSolidusKeyword_1_0());
    }

    |((
(
		lv_pre_2_0=RULE_XML_TEXT
		{
			newLeafNode(lv_pre_2_0, grammarAccess.getXmlTagElementAccess().getPreXML_TEXTTerminalRuleCall_1_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXmlTagElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"pre",
        		lv_pre_2_0, 
        		"XML_TEXT");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXmlTagElementAccess().getContentsXmlContentsParserRuleCall_1_1_1_0()); 
	    }
		lv_contents_3_0=ruleXmlContents		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXmlTagElementRule());
	        }
       		add(
       			$current, 
       			"contents",
        		lv_contents_3_0, 
        		"XmlContents");
	        afterParserOrEnumRuleCall();
	    }

)
)*(	otherlv_4='/' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getXmlTagElementAccess().getSolidusKeyword_1_1_2_0());
    }
(
(
		lv_endTag_5_0=RULE_ID
		{
			newLeafNode(lv_endTag_5_0, grammarAccess.getXmlTagElementAccess().getEndTagIDTerminalRuleCall_1_1_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXmlTagElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"endTag",
        		lv_endTag_5_0, 
        		"ID");
	    }

)
)?))))
;





// Entry rule entryRuleXmlTag
entryRuleXmlTag returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXmlTagRule()); }
	 iv_ruleXmlTag=ruleXmlTag 
	 { $current=$iv_ruleXmlTag.current; } 
	 EOF 
;

// Rule XmlTag
ruleXmlTag returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getXmlTagAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXmlTagRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXmlTagAccess().getAttributesXmlAttributeParserRuleCall_1_0()); 
	    }
		lv_attributes_1_0=ruleXmlAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXmlTagRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_1_0, 
        		"XmlAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleXmlAttribute
entryRuleXmlAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXmlAttributeRule()); }
	 iv_ruleXmlAttribute=ruleXmlAttribute 
	 { $current=$iv_ruleXmlAttribute.current; } 
	 EOF 
;

// Rule XmlAttribute
ruleXmlAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getXmlAttributeAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXmlAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getXmlAttributeAccess().getEqualsSignKeyword_1());
    }
(
(
		lv_value_2_0=RULE_STRING
		{
			newLeafNode(lv_value_2_0, grammarAccess.getXmlAttributeAccess().getValueSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXmlAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"STRING");
	    }

)
))
;





RULE_XML_TEXT : '>' ('<'|~(('<'|'>')) ~('<')* '<');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


